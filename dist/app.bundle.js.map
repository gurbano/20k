{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./index.ts","webpack:///./app/index.ts","webpack:///./app/audio/AudioSystem.ts","webpack:///./app/shader/index.ts"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","app_1","canvas","document","getElementById","MainApp","default","playLoadingScreen","_a","sent","preload","draw","startGame","AudioSystem_1","shader_1","MAX_VERTS","MAX_LIGHTS","compile_shader","gl","shader_type","shader_source","shader","createShader","shaderSource","compileShader","enable_vertex_attrib","attrib_name","count","vertex_size","offset","shader_program","location","getAttribLocation","enableVertexAttribArray","vertexAttribPointer","FLOAT","WglData","ctx","this","texture_size","tile_size","tile_fraction","px_nudge","buffer_data","Float32Array","light_data","renderer_init","console","log","load_image","callback","_temp","Image","src","onload","push_quad","x1","y1","z1","x2","y2","z2","x3","y3","z3","x4","y4","z4","nx","ny","nz","tile","u","set","num_verts","vertex_buffer","shaderProgram","vertex_shader","vertexShader","fragment_shader","fragmentShader","canavs","createBuffer","bindBuffer","ARRAY_BUFFER","bufferData","DYNAMIC_DRAW","createProgram","VERTEX_SHADER","U_VERTEX_SHADER","attachShader","FRAGMENT_SHADER","U_FRAGMENT_SHADER","linkProgram","useProgram","camera_uniform","getUniformLocation","light_uniform","enable","DEPTH_TEST","BLEND","blendFunc","SRC_ALPHA","ONE_MINUS_SRC_ALPHA","viewport","width","height","renderer_bind_image","image","texture_2d","TEXTURE_2D","bindTexture","createTexture","texImage2D","RGBA","UNSIGNED_BYTE","texParameteri","TEXTURE_MAG_FILTER","NEAREST","TEXTURE_MIN_FILTER","TEXTURE_WRAP_S","CLAMP_TO_EDGE","TEXTURE_WRAP_T","renderer_prepare_frame","num_lights","fill","renderer_end_frame","uniform3f","camera","x","y","z","uniform1fv","clearColor","clear","COLOR_BUFFER_BIT","DEPTH_BUFFER_BIT","drawArrays","TRIANGLES","load_level","id","_this","thick","time_now","performance","now","time_last","requestAnimationFrame","App","resizeCanvas","window","addEventListener","getContext","audioSystem","glWrap","Promise","ok","ko","innerWidth","innerHeight","AudioSystem","DEF_VERTEX_SHADER","DEF_FRAGMENT_SHADER","shader_varying"],"mappings":"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","file":"app.bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","/* import { MyLibrary } from './MyLibrary';\n\nconsole.log('See this in your browser console: Typescript Webpack Starter Launched');\n\nconst myLibrary = new MyLibrary();\nconst result = myLibrary.executeDependency();\n\nconsole.log(`A random number ${result}`);\n */\n\nimport App from './app';\nimport AudioSystem from './app/audio/AudioSystem';\n\n\nvar canvas: Partial<HTMLCanvasElement> = document.getElementById('canvas');\nconst MainApp = new App(canvas);\n\nconst startGame = async function startGame() {\n    await MainApp.playLoadingScreen();\n    await MainApp.preload();\n    // await MainApp.playIntro();\n    await MainApp.draw();\n}\n\nstartGame();","import AudioSystem from \"./audio/AudioSystem\";\nimport { U_VERTEX_SHADER, U_FRAGMENT_SHADER} from './shader';\nconst MAX_VERTS = 100 * 1000;\nconst MAX_LIGHTS = 64;\n\nfunction compile_shader(\n    gl: WebGLRenderingContext,\n    shader_type: number, \n    shader_source: string) {\n\tvar shader = gl.createShader(shader_type);\n\tgl.shaderSource(shader, shader_source);\n\tgl.compileShader(shader);\n\t// console.log(gl.getShaderInfoLog(shader));\n\treturn shader;\n};\nfunction enable_vertex_attrib(\n    gl: WebGLRenderingContext,\n    attrib_name: string,\n    count: number, \n    vertex_size: number, \n    offset: number,\n    shader_program: WebGLProgram\n    ) {\n\tvar location = gl.getAttribLocation(shader_program, attrib_name);\n\tgl.enableVertexAttribArray(location);\n\tgl.vertexAttribPointer(location, count, gl.FLOAT, false, vertex_size * 4, offset * 4);\n};\n\nclass WglData{\n    gl: WebGLRenderingContext;\n    index_buffer: WebGLBuffer;\n    vertex_buffer: WebGLBuffer;\n    vertexShader: WebGLShader;\n    fragmentShader: WebGLShader;\n    shaderProgram: WebGLProgram;\n    buffer_data: Float32Array;\n    camera_uniform: WebGLUniformLocation;\n    light_uniform: WebGLUniformLocation;\n    canvas: Partial<HTMLCanvasElement>;\n    time_last: number;\n\n    num_lights: number;\n    num_verts: number;\n    light_data: Float32Array;\n\n    texture_size = 102;\n\ttile_size = 16;\n\ttile_fraction = this.tile_size / this.texture_size;\n\tpx_nudge = 0.5 / this.texture_size;\n    camera: {\n        x: number;\n        y: number;\n        z: number;\n    }\n    constructor(ctx: WebGLRenderingContext, canvas: Partial<HTMLCanvasElement>){\n        this.gl = ctx;\n        this.canvas = canvas;\n        this.buffer_data = new Float32Array(MAX_VERTS*8);\n        this.light_data = new Float32Array(MAX_LIGHTS*7);\n        this.renderer_init();\n        console.log('WebGL handler v.0.1 - ready')\n       \n    }\n    private load_image(name: string, callback: (this: HTMLElement, ev: Event) => any) {\n        let _temp: HTMLImageElement  = new Image();\n        _temp.src = 'm/'+name+'.png';\n        _temp.onload = callback;\n    }\n    push_quad(\n        x1: number, y1: number, z1: number, \n        x2: number, y2: number, z2: number, \n        x3: number, y3: number, z3: number, \n        x4: number, y4: number, z4: number, \n        nx: number, ny: number, nz: number, \n        tile: number) {\n        \n            var u = tile * this.tile_fraction + this.px_nudge;\n            this.buffer_data.set([\n                x1, y1, z1, u, 0, nx, ny, nz,\n                x2, y2, z2, u + this.tile_fraction - this.px_nudge, 0, nx, ny, nz,\n                x3, y3, z3, u, 1, nx, ny, nz,\n                x2, y2, z2, u + this.tile_fraction - this.px_nudge, 0, nx, ny, nz,\n                x3, y3, z3, u, 1, nx, ny, nz,\n                x4, y4, z4, u + this.tile_fraction - this.px_nudge, 1, nx, ny, nz\n            ], this.num_verts * 8);\n            this.num_verts += 6;\n    };\n    private renderer_init() {\n        let gl = this.gl;\n        let vertex_buffer = this.vertex_buffer;\n        let buffer_data = this.buffer_data;\n        let shader_program = this.shaderProgram;\n        let vertex_shader = this.vertexShader;\n        let fragment_shader = this.fragmentShader;\n        let canavs = this.canvas;\n\n        vertex_buffer = gl.createBuffer();\n        gl.bindBuffer(gl.ARRAY_BUFFER, vertex_buffer);\n        gl.bufferData(gl.ARRAY_BUFFER, buffer_data, gl.DYNAMIC_DRAW);\n    \n        shader_program = gl.createProgram();\n        vertex_shader = compile_shader(gl, gl.VERTEX_SHADER, U_VERTEX_SHADER);\n        gl.attachShader(shader_program, vertex_shader);\n        fragment_shader = compile_shader(gl, gl.FRAGMENT_SHADER, U_FRAGMENT_SHADER);\n        gl.attachShader(shader_program, fragment_shader);\n        gl.linkProgram(shader_program);\n        gl.useProgram(shader_program);\n    \n        this.camera_uniform = gl.getUniformLocation(shader_program, \"cam\");\n        this.light_uniform = gl.getUniformLocation(shader_program, \"l\");\n    \n        gl.enable(gl.DEPTH_TEST);\n        gl.enable(gl.BLEND);\n        gl.blendFunc(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA);\n        gl.viewport(0,0,canavs.width,canavs.height);\n    \n        enable_vertex_attrib(gl, 'p', 3, 8, 0, shader_program);\n        enable_vertex_attrib(gl, 'uv', 2, 8, 3, shader_program);\n        enable_vertex_attrib(gl, 'n', 3, 8, 5, shader_program);\n    }\n    private renderer_bind_image(image: HTMLImageElement) {\n        let gl = this.gl;\n        var texture_2d = gl.TEXTURE_2D;\n        gl.bindTexture(texture_2d, gl.createTexture());\n        gl.texImage2D(texture_2d, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, image);\n        gl.texParameteri(texture_2d, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n        gl.texParameteri(texture_2d, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n        gl.texParameteri(texture_2d, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n        gl.texParameteri(texture_2d, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n    }\n    private renderer_prepare_frame() {\n        this.num_verts = 0; //level_num_verts;\n        this.num_lights = 0;\n    \n        // reset all lights\n        this.light_data.fill(1);\n    }\n    private renderer_end_frame() {\n        let gl = this.gl;\n        gl.uniform3f(this.camera_uniform, this.camera.x, this.camera.y - 10, this.camera.z-30);\n        gl.uniform1fv(this.light_uniform, this.light_data);\n    \n        gl.clearColor(0,0,0,1);\n        gl.clear(gl.COLOR_BUFFER_BIT|gl.DEPTH_BUFFER_BIT);\n    \n        gl.bufferData(gl.ARRAY_BUFFER, this.buffer_data, gl.DYNAMIC_DRAW);\n        gl.drawArrays(gl.TRIANGLES, 0, this.num_verts);\n    }\n    load_level(id: string){\n        this.load_image(id, ()=>{\n            console.log(this);\n        });\n    }\n    thick(){\n        \n        let time_now = performance.now();\n        let time_elapsed = (time_now - this.time_last)/1000;\n        this.time_last = time_now;\n        this.renderer_prepare_frame();\n        // ENTITIES.FOREACH _UPDATE && _RENDER\n\n        // center camera on player, apply damping\n /*        camera_x = camera_x * 0.92 - entity_player.x * 0.08;\n        camera_y = camera_y * 0.92 - entity_player.y * 0.08;\n        camera_z = camera_z * 0.92 - entity_player.z * 0.08; \n        // add camera shake\n        camera_shake *= 0.9;\n        camera_x += camera_shake * (_math.random()-0.5);\n        camera_z += camera_shake * (_math.random()-0.5);\n    */\n        // PUSH UI\n\n        this.renderer_end_frame();\n        requestAnimationFrame(this.thick);\n    }\n\n    \n}\n\nexport default class App{\n    ctx: WebGLRenderingContext;\n    audioSystem: any;\n    canvas: Partial<HTMLCanvasElement>;\n    glWrap: WglData;\n    constructor(canvas: Partial<HTMLCanvasElement>){\n        this.canvas = canvas;\n        this.resizeCanvas();\n        window.addEventListener('resize', this.resizeCanvas, false);\n        this.ctx = canvas.getContext('webgl') || canvas.getContext('experimental-webgl')\n        this.audioSystem = new AudioSystem();\n        this.glWrap = new WglData(this.ctx, canvas);\n        \n    }\n    async preload(): Promise<any> {\n        //load texture\n        //load music\n        //init buffer\n\n        return new Promise((ok, ko) => {\n            console.log('import texture');\n\n            console.log('load music');\n\n            console.log('load level');\n            this.glWrap.load_level('l1');\n            ok();\n            \n        });\n    }\n    resizeCanvas() {\n        this.canvas.width = window.innerWidth;\n        this.canvas.height = window.innerHeight;\n    }\n\n    draw(){\n\n        \n    }\n\n    async playLoadingScreen(): Promise<any> {\n        return new Promise((ok, ko) => {\n            let ctx = this.ctx;\n            \n            ok();\n        });\n    }\n}","export default class AudioSystem{\n    \n}","export const DEF_VERTEX_SHADER = \n    'attribute vec2 coordinates;' + \n    'void main(void) {' +\n    ' gl_Position = vec4(coordinates, 0.0, 1.0);' +\n    '}';\n\nexport const DEF_FRAGMENT_SHADER = \n    'void main(void) {' +\n    ' gl_FragColor = vec4(0, 0.8, 0, 1);' +\n    '}';\n\n\nlet shader_attribute_vec = 'attribute vec',\n    shader_varying = \n\t\t'precision highp float;' +\n\t\t'varying vec3 vl;' +\n\t\t'varying vec2 vuv;',\n\tshader_uniform = 'uniform ',\n\tshader_const_mat4 = \"const mat4 \";\n\n\nlet max_lights = 32;\n\nexport const U_VERTEX_SHADER = \n\t\tshader_varying + \n\t\tshader_attribute_vec + \"3 p;\" +\n\t\tshader_attribute_vec + \"2 uv;\" +\n\t\tshader_attribute_vec + \"3 n;\" +\n\t\tshader_uniform + \"vec3 cam;\" +\n\t\tshader_uniform + \"float l[7*\"+max_lights+\"];\" +\n\t\tshader_const_mat4 + \"v=mat4(1,0,0,0,0,.707,.707,0,0,-.707,.707,0,0,-22.627,-22.627,1);\" + // view\n\t\tshader_const_mat4 + \"r=mat4(.977,0,0,0,0,1.303,0,0,0,0,-1,-1,0,0,-2,0);\"+ // projection\n\t\t\"void main(void){\" +\n\t\t\t\"vl=vec3(0.3,0.3,0.6);\" + // ambient color\n\t\t\t\"for(int i=0; i<\"+max_lights+\"; i++) {\"+\n\t\t\t\t\"vec3 lp=vec3(l[i*7],l[i*7+1],l[i*7+2]);\" + // light position\n\t\t\t\t\"vl+=vec3(l[i*7+3],l[i*7+4],l[i*7+5])\" + // light color *\n\t\t\t\t\t\"*max(dot(n,normalize(lp-p)),0.)\" + // diffuse *\n\t\t\t\t\t\"*(1./(l[i*7+6]*(\" + // attentuation *\n\t\t\t\t\t\t\"length(lp-p)\" + // distance\n\t\t\t\t\t\")));\" + \n\t\t\t\"}\" +\n\t\t\t\"vuv=uv;\" +\n\t\t\t\"gl_Position=r*v*(vec4(p+cam,1.));\" +\n\t\t\"}\";\n\nexport const U_FRAGMENT_SHADER =\n\t\tshader_varying + \n\t\tshader_uniform + \"sampler2D s;\" +\n\t\t\"void main(void){\" +\n\t\t\t\"vec4 t=texture2D(s,vuv);\" +\n\t\t\t\"if(t.a<.8)\" + // 1) discard alpha\n\t\t\t\t\"discard;\" + \n\t\t\t\"if(t.r>0.95&&t.g>0.25&&t.b==0.0)\" + // 2) red glowing spider eyes\n\t\t\t\t\"gl_FragColor=t;\" +\n\t\t\t\"else{\" +  // 3) calculate color with lights and fog\n\t\t\t\t\"gl_FragColor=t*vec4(vl,1.);\" +\n\t\t\t\t\"gl_FragColor.rgb*=smoothstep(\" +\n\t\t\t\t\t\"112.,16.,\" + // fog far, near\n\t\t\t\t\t\"gl_FragCoord.z/gl_FragCoord.w\" + // fog depth\n\t\t\t\t\");\" +\n\t\t\t\"}\" +\n\t\t\t\"gl_FragColor.rgb=floor(gl_FragColor.rgb*6.35)/6.35;\" + // reduce colors to ~256\n\t\t\"}\";\n"],"sourceRoot":""}